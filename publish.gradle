apply plugin: 'maven-publish'
apply plugin: 'signing'

// Create variables with empty default values
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''
ext["signingKey"] = ''
ext["signingPassword"] = ''
ext["sonatypeStagingProfileId"] = ''

File secretPropsFile = project.rootProject.file('local.properties')
if (secretPropsFile.exists()) {
    // Read local.properties file first if it exists
    Properties p = new Properties()
    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
    p.each { name, value -> ext[name] = value }
} else {
    // Use system environment variables
    ext["ossrhUsername"] = System.getenv('OSSRH_TOKEN_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_TOKEN_PASSWORD')
    ext["signingKey"] = System.getenv('SIGNING_KEY')
    ext["signingPassword"] = System.getenv('SIGNING_PASSWORD')
    ext["sonatypeStagingProfileId"] = System.getenv('SONATYPE_STAGING_PROFILE_ID')
}

afterEvaluate {
    publishing {
        publications {
        	release(MavenPublication) {
        		from components.java
            	artifactId 'stream-chat-java'

                pom {
                    name = "Stream Chat official Java API Client"
                    description = "Stream Chat Java Client for backend integrations"
                    url = 'https://github.com/getstream/stream-chat-java'
                    licenses {
                        license {
                            name = 'Stream License'
                            url = 'https://github.com/GetStream/stream-chat-java/blob/main/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id = 'getstream-support'
                            name = 'Stream Support'
                            email = 'support@getstream.io'
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/getstream/stream-chat-java.git'
                        developerConnection = 'scm:git:ssh://github.com/getstream/stream-chat-java.git'
                        url = 'https://github.com/getstream/stream-chat-java/tree/main'
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
            stagingProfileId = sonatypeStagingProfileId
            //username = ossrhUsername
            //password = ossrhPassword
        }
    }
}

publishing {
    repositories {
        maven {
            name = "local"

            def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

        }
    }
}

signing {
    //useInMemoryPgpKeys(signingKey, signingPassword)
    sign publishing.publications
}

javadoc {
    options.addBooleanOption('html5', true)
}
